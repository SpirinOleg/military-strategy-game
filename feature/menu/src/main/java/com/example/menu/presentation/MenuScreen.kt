package com.example.menu.presentation

import androidx.compose.foundation.background
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Brush
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.platform.LocalContext
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import kotlin.system.exitProcess

@OptIn(ExperimentalMaterial3Api::class)
@Composable
fun MenuScreenCompact(
    onNavigateToShop: () -> Unit,
    onNavigateToGame: (Int) -> Unit
) {
    val context = LocalContext.current

    // –î–û–†–ê–ë–û–¢–ö–ê 4: –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω —Å —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
    Box(
        modifier = Modifier
            .fillMaxSize()
            .background(
                brush = Brush.verticalGradient(
                    colors = listOf(
                        Color(0xFF1a1a2e),
                        Color(0xFF16213e),
                        Color(0xFF0f3460)
                    )
                )
            ),
        contentAlignment = Alignment.Center // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –≤–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç
    ) {
        Column(
            modifier = Modifier
                .fillMaxWidth(0.6f) // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É –¥–æ 60% —ç–∫—Ä–∞–Ω–∞
                .padding(24.dp), // –£–º–µ–Ω—å—à–∏–ª–∏ –æ—Ç—Å—Ç—É–ø—ã
            horizontalAlignment = Alignment.CenterHorizontally,
            verticalArrangement = Arrangement.spacedBy(16.dp) // –£–º–µ–Ω—å—à–∏–ª–∏ –æ—Ç—Å—Ç—É–ø—ã
        ) {
            // –ó–∞–≥–æ–ª–æ–≤–æ–∫ - —É–º–µ–Ω—å—à–µ–Ω –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –º–µ—Å—Ç–∞
            Card(
                modifier = Modifier.fillMaxWidth(),
                colors = CardDefaults.cardColors(
                    containerColor = Color.Black.copy(alpha = 0.8f)
                ),
                shape = RoundedCornerShape(12.dp)
            ) {
                Column(
                    modifier = Modifier
                        .fillMaxWidth()
                        .padding(16.dp), // –£–º–µ–Ω—å—à–∏–ª–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã
                    horizontalAlignment = Alignment.CenterHorizontally
                ) {
                    Text(
                        text = "‚öîÔ∏è –í–û–ï–ù–ù–ê–Ø –°–¢–†–ê–¢–ï–ì–ò–Ø",
                        fontSize = 22.sp, // –£–º–µ–Ω—å—à–∏–ª–∏ —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞
                        fontWeight = FontWeight.Bold,
                        color = Color.White,
                        textAlign = TextAlign.Center
                    )
                    Spacer(modifier = Modifier.height(4.dp))
                    Text(
                        text = "–ö–æ–º–∞–Ω–¥–æ–≤–∞–Ω–∏–µ –ø–æ–ª–µ–º –±–æ—è",
                        fontSize = 12.sp, // –£–º–µ–Ω—å—à–∏–ª–∏ —Ä–∞–∑–º–µ—Ä –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∞
                        color = Color.Gray,
                        textAlign = TextAlign.Center
                    )
                }
            }

            // –î–û–†–ê–ë–û–¢–ö–ê 4: –ö–Ω–æ–ø–∫–∏ –º–µ–Ω—é —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Ä–∞–∑–º–µ—Ä–æ–º (–Ω–µ —Ä–∞—Å—Ç—è–≥–∏–≤–∞—é—Ç—Å—è)
            Card(
                modifier = Modifier.fillMaxWidth(),
                colors = CardDefaults.cardColors(
                    containerColor = Color.Black.copy(alpha = 0.7f)
                ),
                shape = RoundedCornerShape(16.dp)
            ) {
                Column(
                    modifier = Modifier
                        .fillMaxWidth()
                        .padding(16.dp), // –£–º–µ–Ω—å—à–∏–ª–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã
                    horizontalAlignment = Alignment.CenterHorizontally, // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏
                    verticalArrangement = Arrangement.spacedBy(12.dp) // –£–º–µ–Ω—å—à–∏–ª–∏ –æ—Ç—Å—Ç—É–ø—ã –º–µ–∂–¥—É –∫–Ω–æ–ø–∫–∞–º–∏
                ) {
                    CompactMenuButton(
                        text = "üéÆ –ù–ê–ß–ê–¢–¨ –ò–ì–†–£",
                        color = Color(0xFF4A90E2),
                        onClick = { onNavigateToGame(1000) }
                    )

                    CompactMenuButton(
                        text = "üõí –ú–ê–ì–ê–ó–ò–ù –í–û–ô–°–ö",
                        color = Color(0xFFFF5722),
                        onClick = {
                            println("DEBUG: ===== COMPACT SHOP BUTTON CLICKED =====")
                            onNavigateToShop()
                        }
                    )

                    CompactMenuButton(
                        text = "‚ùå –í–´–•–û–î",
                        color = Color(0xFF757575),
                        onClick = {
                            println("DEBUG: Exit clicked - closing app")
                            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
                            (context as? androidx.activity.ComponentActivity)?.finish()
                            exitProcess(0)
                        }
                    )
                }
            }

            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤–Ω–∏–∑—É
            Card(
                modifier = Modifier.fillMaxWidth(),
                colors = CardDefaults.cardColors(
                    containerColor = Color.Black.copy(alpha = 0.5f)
                ),
                shape = RoundedCornerShape(12.dp)
            ) {
                Text(
                    text = "–í–µ—Ä—Å–∏—è 1.0 ‚Ä¢ –°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∞—è –∏–≥—Ä–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏",
                    modifier = Modifier
                        .fillMaxWidth()
                        .padding(16.dp),
                    fontSize = 12.sp,
                    color = Color.Gray,
                    textAlign = TextAlign.Center
                )
            }
        }
    }
}

@Composable
private fun CompactMenuButton(
    text: String,
    color: Color,
    onClick: () -> Unit
) {
    // –î–û–†–ê–ë–û–¢–ö–ê 4: –ö–Ω–æ–ø–∫–∏ —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Ä–∞–∑–º–µ—Ä–æ–º, –Ω–µ —Ä–∞—Å—Ç—è–≥–∏–≤–∞—é—Ç—Å—è
    Button(
        onClick = onClick,
        modifier = Modifier
            .width(250.dp) // –£–º–µ–Ω—å—à–∏–ª–∏ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é —à–∏—Ä–∏–Ω—É
            .height(48.dp), // –£–º–µ–Ω—å—à–∏–ª–∏ –≤—ã—Å–æ—Ç—É –∫–Ω–æ–ø–æ–∫
        shape = RoundedCornerShape(10.dp), // –ù–µ–º–Ω–æ–≥–æ —É–º–µ–Ω—å—à–∏–ª–∏ –æ–∫—Ä—É–≥–ª–æ—Å—Ç—å —É–≥–ª–æ–≤
        colors = ButtonDefaults.buttonColors(
            containerColor = color,
            contentColor = Color.White
        ),
        elevation = ButtonDefaults.buttonElevation(
            defaultElevation = 4.dp,
            pressedElevation = 8.dp
        )
    ) {
        Text(
            text = text,
            fontSize = 14.sp, // –£–º–µ–Ω—å—à–∏–ª–∏ —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ –∫–Ω–æ–ø–æ–∫
            fontWeight = FontWeight.Bold
        )
    }
}